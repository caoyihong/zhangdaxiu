<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingyuan.zhifeng.repository.StudentMapper">
	<resultMap id="BaseResultMap" type="com.jingyuan.zhifeng.entity.Student">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="classid" property="classid" jdbcType="INTEGER" />
		<result column="sex" property="sex" jdbcType="TINYINT" />
		<result column="startyear" property="startyear" jdbcType="INTEGER" />
		<result column="pass" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<association property="classBean" column="classid" select="com.jingyuan.zhifeng.repository.ClassMapper.selectByPrimaryKey"></association>
	</resultMap>
	<sql id="Base_Column_List">
		id, name, classid, sex, startyear, password, salt
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from student
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from student
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jingyuan.zhifeng.entity.Student">
		insert into student (id, name, classid,
		sex, startyear, password,
		salt)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{classid,jdbcType=INTEGER},
		#{sex,jdbcType=TINYINT}, #{startyear,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jingyuan.zhifeng.entity.Student">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="classid != null">
				classid,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="startyear != null">
				startyear,
			</if>
			<if test="pass != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="classid != null">
				#{classid,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=TINYINT},
			</if>
			<if test="startyear != null">
				#{startyear,jdbcType=INTEGER},
			</if>
			<if test="pass != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jingyuan.zhifeng.entity.Student">
		update student
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="classid != null">
				classid = #{classid,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=TINYINT},
			</if>
			<if test="startyear != null">
				startyear = #{startyear,jdbcType=INTEGER},
			</if>
			<if test="pass != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jingyuan.zhifeng.entity.Student">
		update student
		set name = #{name,jdbcType=VARCHAR},
		classid = #{classid,jdbcType=INTEGER},
		sex = #{sex,jdbcType=TINYINT},
		startyear = #{startyear,jdbcType=INTEGER},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectByName" parameterType="string" resultMap="BaseResultMap">
		select s.* from student s where s.name = #{0}
	</select>
	
	<select id="selectStus" parameterType="string" resultType="map">
		select s.name,c.department,c.speciality,s.id from student s,class c WHERE s.classid = c.id 
		<if test="param1 != null">
			and c.department = #{param1}
		</if>
		<if test="param2 != null">
			and c.speciality = #{param2}
		</if>
		<if test="param3 != null">
			and s.id = #{param3}
		</if>
	</select>
</mapper>