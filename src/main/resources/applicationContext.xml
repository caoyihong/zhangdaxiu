<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
	default-lazy-init="true">

	<description>spring configuration</description>

	<!-- 加载*.properties File -->
	<bean id="dbConfPostProcessor"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<!--配置底层缓存实现-->
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"></property>
	</bean>
	
	<!-- 扫描架包 -->
	<context:component-scan base-package="com.jingyuan.zhifeng">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 数据库连接池配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${db.zhifeng-web.driver}"/>
		<property name="url" value="${db.zhifeng-web.url}"/>
		<property name="username" value="${db.zhifeng-web.username}"/>
		<property name="password" value="${db.zhifeng-web.password}"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- 扫描指定包下的Mapper，自动创建mapper bean实例 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jingyuan.zhifeng.repository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />-->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 仅do开头的Service层方法，发生Exception异常时，才会事务回滚 -->
			<tx:method name="do*" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="update*" read-only="false" rollback-for="java.lang.Exception" />
			<!-- 其它方法，只读事务，不回滚 -->
			<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 仅拦截service层方法 -->
		<aop:pointcut id="pc"
			expression="execution(* com.jingyuan.zhifeng.service.*.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	<!-- 
	<aop:config>
		<aop:pointcut id="pointcut" expression="execution(* com.jingyuan.zhifeng.repository.*.*(..))"/>
		<aop:aspect ref="AllAop">
			<aop:before pointcut-ref="pointcut" method="beforeDao"/>
			<aop:after method="afterDao" pointcut-ref="pointcut" />
			<aop:after method="afterService" pointcut="execution(* com.jingyuan.zhifeng.service.*.*.*(..))" />
			<aop:before method="beforeService" pointcut="execution(* com.jingyuan.zhifeng.service.*.*.*(..))" />
		</aop:aspect>
	</aop:config> -->

</beans>