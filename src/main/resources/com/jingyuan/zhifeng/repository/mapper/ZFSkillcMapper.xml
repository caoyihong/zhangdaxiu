<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingyuan.zhifeng.repository.ZFSkillcMapper" >
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
  <resultMap id="BaseResultMap" type="ZFSkillc" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, parentid, name, createtime, updatetime, enable
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zf_skillc
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zf_skillc
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ZFSkillc" useGeneratedKeys="true" keyProperty="id">
    insert into zf_skillc (parentid, name, 
      createtime, updatetime, enable
      )
    values (#{parentid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
     now(), now(), #{enable,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="ZFSkillc" useGeneratedKeys="true" keyProperty="id">
    insert into zf_skillc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="name != null" >
        name,
      </if>
        createtime,
        updatetime,
      <if test="enable != null" >
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
        now(),
        now(),
      <if test="enable != null" >
        #{enable,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ZFSkillc" >
    update zf_skillc
    <set >
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ZFSkillc" >
    update zf_skillc
    set parentid = #{parentid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByAgencyeId" resultMap="BaseResultMap">
  	select * from zf_skillc c where c.id = #{agencyId}
  </select>
  <select id="findByParentId" resultMap="BaseResultMap">
  	select * from zf_skillc c where c.parentid = #{parentId}
  </select>
  <select id="selectByIds" resultMap="BaseResultMap">
  	select * from zf_skillc s where 
  	<foreach item="skillid" index="index" collection="array" open="(" separator=" or " close=")">
    	s.id = '${skillid}'
  	</foreach>
  </select>

</mapper>